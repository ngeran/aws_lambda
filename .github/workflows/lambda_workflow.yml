name: Deploy and Invoke Lambda

on:
  workflow_dispatch:

jobs:
  deploy-and-invoke:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install junos-eznc boto3 -t .

      - name: Create deployment package
        run: |
          zip -r lambda_function.zip . -x "*.git*"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create or Update Lambda Function
        run: |
          if aws lambda get-function --function-name my-route-monitor > /dev/null 2>&1; then
            echo "Function exists, updating..."
            aws lambda update-function-code \
              --function-name my-route-monitor \
              --zip-file fileb://lambda_function.zip
          else
            echo "Function doesn't exist, creating..."
            aws lambda create-function \
              --function-name my-route-monitor \
              --zip-file fileb://lambda_function.zip \
              --handler lambda_function.lambda_handler \
              --runtime python3.9 \
              --role ${{ secrets.LAMBDA_ROLE_ARN }} \
              --timeout 300 \
              --memory-size 128
          fi

      - name: Invoke Lambda
        id: invoke_lambda
        run: |
          aws lambda invoke \
            --function-name my-route-monitor \
            --payload '{}' \
            --log-type Tail \
            response.json > invoke_output.log
          cat response.json

      - name: Upload invocation result
        uses: actions/upload-artifact@v4  # Updated to v4
        if: always()  # Run even if previous steps fail, to debug
        with:
          name: lambda-response
          path: response.json
